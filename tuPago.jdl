entity AccountUser {
    id Long required
    user String maxlength(100) required
    userAccount UUID required
    inscription Instant required
    userTelephone String minlength(10) maxlength(20) required
    userName String maxlength(100) required
    editBy String maxlength(100) required
    editDate Instant required
    createdBy String maxlength(100) required
    createsDate Instant required
}

entity Bank {
    id Long required
    bankName String maxlength(100) required
    bankAccount String maxlength(50) required
    editBy String maxlength(100) required
    editDate Instant required
    createdBy String maxlength(100) required
    createsDate Instant required
}


entity ClientConnect {
    id Long required
    name String  maxlength(100) required
    type String  maxlength(100) required
    identifier String  maxlength(100) required
    located String  maxlength(100)
    editBy String maxlength(100) required
    editDate Instant required
    createdBy String maxlength(100) required
    createsDate Instant required
}

entity Transaction {
    id Long required
    inicialDate Instant
    creadoDate Instant
    enviadoDate Instant
    errorDate Instant
    pagadoDate Instant
    status Status required
    reference String required
    amount BigDecimal required
    type Boolean required
    from String required
    accountFrom String required
    referenceFrom String
    messageFrom String
    paymentString String
    editBy String maxlength(100) required
    editDate Instant required
    createdBy String maxlength(100) required
    createsDate Instant required
}

enum Status {
    INICIAL, CREADO, ENVIADO, ERROR, PAGADO
}

//relationship ManyToOne {
//    Bank to AccountUser
//    ClientConnect to AccountUser
//    Transaction to AccountUser
//    Transaction to ClientConnect
//    AccountUser to Bank
//}


relationship OneToMany {
    AccountUser{bank} to Bank{accountuser}
    AccountUser{clientconnect} to ClientConnect{accountuser}
    AccountUser{transaction} to Transaction{accountuser}
    Bank{transaction} to Transaction{bank}
    ClientConnect{transaction} to Transaction{clientconnect}
}

//paginate Transaction, ClientConnect, Bank with pagination
//filter Transaction, ClientConnect, Bank

dto all with mapstruct

service all with serviceImpl

//search * with elasticSearch
//search Transaction, ClientConnect  with elasticSearch




/*
Banxico JDL


entity Alta {
	claveInstitucion Integer required
    numeroSerie String required minlength(20) maxlength(20)
    numeroSerieBM String required minlength(20) maxlength(20)
    claveSim String required maxlength(690)
    cadenaOriginal String
    estampaTiempo Long
    selloDigital String maxlength(1000)
}

// excluir de los datos que forman la cadena original ~ y el | regex=[^~|]

entity Alias {
	tipoDeAlias int required
    alias Long max(9999999999) min(1000000000)
}

/*
enum TipoAlias {
	Celular
}
*/

entity Peticion {
    folioPet UUID
    edoPet Integer required minlength(0) //seccion7.2.4 EstadoPeticion
    numeroSerieBM String required minlength(20) maxlength(20)
    cadenaOriginal String required minlength(2) //seccion 7.2.1 se pone ND a menos que edoPet = 0
    estampaTiempo Long
    selloDigital //seccion 7.2.2
}

/*
enum EstadoPeticion {

}
*/

entity InfoCuentaConsulta {
    nombreEnmascarado String maxlength(40)
}



*/
